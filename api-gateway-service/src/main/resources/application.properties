spring.application.name=api-gateway-service
server.port=8080
booking-request-topic=booking-request
booking-request-status-topic=booking-request-status
user-service-url=localhost:7070
booking-service-url=localhost:5050

# user-service-url=http://user-service:7070
# booking-service-url=http://booking-service:5050

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=org.openapitools.*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true
logging.level.org.springframework.cloud.gateway=DEBUG

spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=http://localhost:7070
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

spring.cloud.gateway.routes[1].id=booking-service
spring.cloud.gateway.routes[1].uri=http://localhost:5050
spring.cloud.gateway.routes[1].predicates[0]=Path=/bookings/users/{userId}
